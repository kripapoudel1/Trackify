@page "/add-transactions"
@inject JsonFileService JsonFileService
@inject NavigationManager NavigationManager
@inject ApplicationState ApplicationState
@using Trackify.TransactionModel

<div class="content">
    <h1>Add New Transaction</h1>
    <form class="transaction-form" @onsubmit="HandleFormSubmit">
        <div class="form-group">
            <label for="transactionType">Transaction Type</label>
            <select id="transactionType" class="input-field" @bind="Transaction.TransactionType">
                <option value="Credit">Credit</option>
                <option value="Debit">Debit</option>
            </select>
        </div>
        <div class="form-group">
            <label for="amount">Amount</label>
            <input type="number" id="amount" class="input-field" @bind="Transaction.Amount" placeholder="Enter Amount" required />
        </div>
        <div class="form-group">
            <label for="title">Title</label>
            <input type="text" id="title" class="input-field" @bind="Transaction.Title" placeholder="Enter Title" required />
        </div>
        <div class="form-group">
            <label for="date">Date</label>
            <input type="date" id="date" class="input-field" @bind="Transaction.Date" required />
        </div>
        <div class="form-group">
            <label for="tags">Tags</label>
            <select id="tags" class="input-field" @bind="SelectedTag">
                <option>Select Tag</option>
                @foreach (var tag in Enum.GetValues<DefaultTags>())
                {
                    <option value="@tag">@tag</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="notes">Notes</label>
            <textarea id="notes" class="input-field" @bind="Transaction.Notes" placeholder="Add Notes"></textarea>
        </div>

        <button type="submit" class="btn-submit">Add Transaction</button>
    </form>
</div>

<style>
 
    /* General Layout */
    .main-container {
        display: flex;
        height: 100vh;
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .sidebar {
        width: 250px;
        background-color: #76989c;
        color: white;
        padding: 20px;
    }

        .sidebar h2 {
            font-size: 20px;
            margin: 0;
        }

        .sidebar p {
            font-size: 14px;
            margin: 10px 0 20px;
        }

    .menu {
        list-style: none;
        padding: 0;
    }

        .menu li {
            margin: 10px 0;
        }

        .menu a {
            text-decoration: none;
            color: white;
            font-size: 16px;
            padding: 10px;
            display: block;
            border-radius: 5px;
        }

            .menu a.active,
            .menu a:hover {
                background-color: #b5c9cc;
            }

    .content {
        flex-grow: 1;
        padding: 30px;
        background-color: #f5f5f5;
    }

        .content h1 {
            font-size: 24px;
            margin-bottom: 20px;
        }

    /* Form Styling */
    .transaction-form {
        max-width: 500px;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        font-size: 14px;
        margin-bottom: 5px;
        color: #333;
    }

    .input-field {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
        outline: none;
        background-color: #dbe6e6;
    }

        .input-field:focus {
            border-color: #76989c;
        }

    textarea.input-field {
        resize: none;
        height: 80px;
    }

    .btn-submit {
        background-color: #76989c;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        width: 100%;
    }

        .btn-submit:hover {
            background-color: #5e7a7e;
        }
</style>

@code {
    private TransactionModel Transaction = new TransactionModel { Tags = new List<string>() };
    private string SelectedTag = string.Empty;
    private string DefaultCurrency = "USD";
    private User? currentUser;

    protected override async Task OnInitializedAsync()
    {
        Transaction.UserId = ApplicationState.UserId ?? 0;

        try
        {
            var users = await JsonFileService.ReadAsync<User>("users.json");
            currentUser = users.FirstOrDefault(u => u.UserId == ApplicationState.UserId.GetValueOrDefault(0));

            if (currentUser != null)
            {
                DefaultCurrency = currentUser.CurrencyType;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user.json: {ex.Message}");
        }
    }

    private async Task HandleFormSubmit()
    {
        if (!string.IsNullOrEmpty(SelectedTag))
        {
            Transaction.Tags.Add(SelectedTag);
        }

        try
        {
            var transactions = await JsonFileService.ReadAsync<TransactionModel>("transactions.json");
            transactions.Add(Transaction);
            await JsonFileService.WriteAsync("transactions.json", transactions);

            NavigationManager.NavigateTo("/view-transactions");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving transaction: {ex.Message}");
        }
    }
}
