@page "/login"
@inject JsonFileService JsonFileService
@inject NavigationManager NavigationManager
@inject ApplicationState ApplicationState

<div class="container">
    <div class="login-box">
        <h1>TRACKIFY</h1>
        <p>Welcome Back!</p>
        <p class="tagline">"Budget smarter, live better."</p>
        
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="error-message">@errorMessage</p>
        }

        <form @onsubmit="HandleLogin">
            <h2>Login</h2>
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" id="username" class="input-field" @bind="username" required />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <div class="password-container">
                    <input type="password" id="password" class="input-field" @bind="password" required />
                    
                </div>
            </div>
            <button type="submit" class="btn-login">Login</button>
        </form>
        
        
    </div>
</div>

<style>
    /* General Styling */
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #dbe6e6;
        font-family: Arial, sans-serif;
    }

    .login-box {
        background-color: #76989c;
        border-radius: 10px;
        padding: 30px;
        text-align: center;
        width: 300px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    h1 {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    p {
        margin: 5px 0;
        color: #333;
    }

    .tagline {
        font-size: 12px;
        color: #6d6d6d;
        font-style: italic;
    }

    /* Form Styling */
    h2 {
        font-size: 20px;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 15px;
        text-align: left;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-size: 14px;
        color: #fff;
    }

    .input-field {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        outline: none;
        font-size: 14px;
    }

    .password-container {
        position: relative;
    }

    .toggle-password {
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        cursor: pointer;
    }

    /* Button Styling */
    .btn-login {
        background-color: #b5c9cc;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-login:hover {
        background-color: #96aeb0;
    }

    /* Link Styling */
    .register-link {
        margin-top: 15px;
        font-size: 12px;
        color: #333;
    }

    .register-link a {
        color: #000;
        text-decoration: underline;
    }

    .error-message {
        color: red;
        font-size: 0.9rem;
        margin-bottom: 1rem;
        text-align: center;
    }
</style>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string? errorMessage;

    private async Task HandleLogin()
    {
        var users = await JsonFileService.ReadAsync<User>("users.json");

        if (!users.Any())
        {
            errorMessage = "No users found. Please register first.";
            return;
        }

        var user = users.FirstOrDefault(u => u.Username == username && u.Password == password);

        if (user != null)
        {
            // Store user information in AppState
            ApplicationState.UserId = user.UserId;
            ApplicationState.Username = user.Username;
            ApplicationState.CurrencyType = user.CurrencyType;
            ApplicationState.Balance = user.Balance;

            // Redirect to dashboard
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = "Invalid username or password.";
        }
    }

   
}
